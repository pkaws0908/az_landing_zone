trigger: none
pool: pkdgpool
stages:
- stage: terraformdownload
  jobs:
    - job: terraform_download
      steps:
      - task: TerraformInstaller@1
        displayName: terraforminstall
        inputs:
          terraformVersion: 'latest'
- stage: terraforminit
  jobs:
    - job: terraform_init
      steps:
      - task: TerraformTask@5
        displayName: terraforminit
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/azinfra/Environment/dev'
          backendServiceArm: 'pkdgconnection'
          backendAzureRmResourceGroupName: 'pkdg_dev'
          backendAzureRmStorageAccountName: 'pkdgstorage'
          backendAzureRmContainerName: 'pkdgcontainer'
          backendAzureRmKey: 'dev.terraform.tfstate'
- stage: terraformplan
  jobs:
    - job: terraformplan
      steps:
      - task: TerraformTask@5
        displayName: terraformplan
        inputs:
          provider: 'azurerm'
          command: 'plan'
          workingDirectory: '$(System.DefaultWorkingDirectory)/azinfra/Environment/dev'
          environmentServiceNameAzureRM: 'pkdgconnection'
- stage: manuallapprovals
  pool: server
  jobs:
    - job: manualapproval
      steps:
      - task: ManualValidation@1
        inputs:
          notifyUsers: 'prashant'
          approvers: 'prashant'
- stage: terraforminitandapply
  jobs:
    - job: terraforminitandapply
      steps: 
      - task: TerraformTask@5
        displayName: terraforminit
        inputs:
          provider: 'azurerm'
          command: 'init'
          workingDirectory: '$(System.DefaultWorkingDirectory)/azinfra/Environment/dev'
          backendServiceArm: 'pkdgconnection'
          backendAzureRmResourceGroupName: 'pkdg_dev'
          backendAzureRmStorageAccountName: 'pkdgstorage'
          backendAzureRmContainerName: 'pkdgcontainer'
          backendAzureRmKey: 'dev.terraform.tfstate'
    - job: terraformapply
      steps:
      - task: TerraformTask@5
        inputs:
          provider: 'azurerm'
          command: 'apply'
          workingDirectory: '$(System.DefaultWorkingDirectory)/azinfra/Environment/dev'
          environmentServiceNameAzureRM: 'pkdgconnection'
      
